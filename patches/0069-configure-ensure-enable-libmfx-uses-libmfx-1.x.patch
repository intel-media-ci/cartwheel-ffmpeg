From f151cb1535a30fa4b9db8b239876139e9b1741f6 Mon Sep 17 00:00:00 2001
From: Haihao Xiang <haihao.xiang@intel.com>
Date: Wed, 3 Feb 2021 09:08:27 +0800
Subject: [PATCH 69/93] configure: ensure --enable-libmfx uses libmfx 1.x

Intel's oneVPL is a successor to MediaSDK, but removed some obsolete
features of MediaSDK[1]. However some of obsolete features, including
OPAQUE memory, multi-frame encode, user plugins and LA_EXT rate control
mode etc, are enabled in FFmpeg. Hence user can not enable libmfx if
using the oneVPL SDK. In order to make sure user builds FFmpeg against
the right libmfx, this patch added a check for the version of libmfx
and warning message about the used obsolete features.

[1] https://spec.oneapi.com/versions/latest/elements/oneVPL/source/appendix/VPL_intel_media_sdk.html
---
 configure | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/configure b/configure
index 3c46c3a0e3..fa79f9e8ad 100755
--- a/configure
+++ b/configure
@@ -6452,8 +6452,11 @@ enabled liblensfun        && require_pkg_config liblensfun lensfun lensfun.h lf_
 # Media SDK or Intel Media Server Studio, these don't come with
 # pkg-config support.  Instead, users should make sure that the build
 # can find the libraries and headers through other means.
-enabled libmfx            && { check_pkg_config libmfx libmfx "mfx/mfxvideo.h" MFXInit ||
-                               { require libmfx "mfx/mfxvideo.h" MFXInit "-llibmfx $advapi32_extralibs" && warn "using libmfx without pkg-config"; } }
+enabled libmfx            && { { check_pkg_config libmfx "libmfx < 2.0" "mfx/mfxvideo.h" MFXInit ||
+                                 { require "libmfx < 2.0" "mfx/mfxvideo.h" MFXInit "-llibmfx $advapi32_extralibs" && warn "using libmfx without pkg-config"; } } &&
+                               warn "build FFmpeg against libmfx 1.x, obsolete features of libmfx such as OPAQUE memory,\n"\
+                                    "multi-frame encode, user plugins and LA_EXT rate control mode are enabled"; }
+
 if enabled libmfx; then
    check_cc MFX_CODEC_VP9 "mfx/mfxvp9.h mfx/mfxstructures.h" "MFX_CODEC_VP9"
 fi
-- 
2.17.1

